; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = mLRS

[env]
framework = arduino
monitor_speed = 115200
upload_speed = 921600

;--------------------
; common environments
;--------------------

[env_common_esp82xx]
platform = espressif8266@4.2.1
board_build.f_cpu = 160000000L
build_type = release
build_flags = -Os

[env_common_esp32]
platform = espressif32@6.6.0
;board_build.f_flash = 80000000L
;board_build.flash_mode = qio
board_build.f_cpu = 240000000L
build_type = release
build_flags =
  -D CONFIG_DISABLE_HAL_LOCKS=1
  -D CONFIG_GPIO_CTRL_FUNC_IN_IRAM=1
  -D CONFIG_GPTIMER_CTRL_FUNC_IN_IRAM=1
  -D CONFIG_GPTIMER_ISR_IRAM_SAFE=1
  -D CONFIG_SPI_MASTER_IN_IRAM=1
  -D CONFIG_UART_ISR_IN_IRAM=1
  -D CONFIG_I2C_ISR_IRAM_SAFE=1
;  -D CONFIG_ARDUINO_ISR_IRAM=1
;  -D CONFIG_FREERTOS_UNICORE=1
  -O2
build_unflags = -Os

[env_common_esp32c3]
platform = espressif32@6.6.0
board_build.f_cpu = 160000000L
build_type = release
build_flags =
  -D CONFIG_DISABLE_HAL_LOCKS=1
  -D CONFIG_GPIO_CTRL_FUNC_IN_IRAM=1
  -D CONFIG_GPTIMER_CTRL_FUNC_IN_IRAM=1
  -D CONFIG_GPTIMER_ISR_IRAM_SAFE=1
  -D CONFIG_SPI_MASTER_IN_IRAM=1
  -D CONFIG_UART_ISR_IN_IRAM=1
  -D CONFIG_I2C_ISR_IRAM_SAFE=1
  -O2
build_unflags = -Os

;-- RX --

[env_common_rx]
build_src_filter =
  -<*>
  +<CommonRx/mlrs-rx.cpp>
  +<CommonRx/out.cpp>
  +<Common/channel_order.cpp>
  +<Common/common_stats.cpp>
  +<Common/common_types.cpp>
  +<Common/diversity.cpp>
  +<Common/fhss.cpp>
  +<Common/link_types.cpp>
  +<Common/lq_counter.cpp>
  +<Common/libs/filters.cpp>
  +<modules/stm32ll-lib/src/stdstm32.c>

[env_common_rx_esp82xx]
extends = env_common_esp82xx
build_src_filter = ${env_common_rx.build_src_filter}

[env_common_rx_esp32]
extends = env_common_esp32
build_src_filter = ${env_common_rx.build_src_filter}

[env_common_rx_esp32c3]
extends = env_common_esp32c3
build_src_filter = ${env_common_rx.build_src_filter}

;-- TX --

[env_common_tx]
build_src_filter =
  -<*>
  +<CommonTx/mlrs-tx.cpp>
  +<CommonTx/config_id.cpp>
  +<CommonTx/in.cpp>
  +<Common/channel_order.cpp>
  +<Common/common_stats.cpp>
  +<Common/common_types.cpp>
  +<Common/diversity.cpp>
  +<Common/fhss.cpp>
  +<Common/link_types.cpp>
  +<Common/lq_counter.cpp>
  +<Common/while.cpp>
  +<Common/tasks.cpp>
  +<Common/libs/filters.cpp>
  +<Common/thirdparty/thirdparty.cpp>
  +<modules/stm32ll-lib/src/stdstm32.c>

[env_common_tx_esp32]
extends = env_common_esp32
build_src_filter = ${env_common_tx.build_src_filter}


;--------------------
; target boards
;--------------------

;-- ELRS 868/915 MHz Generic Devices

[env:rx-generic-900]
extends = env_common_rx_esp82xx
board = esp8285
build_src_filter =
  ${env_common_rx_esp82xx.build_src_filter}
  +<modules/sx12xx-lib/src/sx127x.cpp>
build_flags =
  ${env_common_rx_esp82xx.build_flags}
  -D RX_ELRS_GENERIC_900_ESP8285


[env:rx-generic-900-pa]
extends = env_common_rx_esp82xx
board = esp8285
build_src_filter =
  ${env_common_rx_esp82xx.build_src_filter}
  +<modules/sx12xx-lib/src/sx127x.cpp>
build_flags =
  ${env_common_rx_esp82xx.build_flags}
  -D RX_ELRS_GENERIC_900_PA_ESP8285


[env:rx-generic-900-td-pa]
extends = env_common_rx_esp32
board = pico32
lib_deps =
  makuna/NeoPixelBus@^2.8.3
build_src_filter =
  ${env_common_rx_esp32.build_src_filter}
  +<modules/sx12xx-lib/src/sx127x.cpp>
build_flags =
  ${env_common_rx_esp32.build_flags}
  -D RX_ELRS_GENERIC_900_TD_PA_ESP32


[env:rx-generic-lr1121-td]
extends = env_common_rx_esp32
board = pico32
lib_deps =
  makuna/NeoPixelBus@^2.8.3
build_src_filter =
  ${env_common_rx_esp32.build_src_filter}
  +<modules/sx12xx-lib/src/lr11xx.cpp>
build_flags =
  ${env_common_rx_esp32.build_flags}
  -D RX_ELRS_GENERIC_LR1121_TD_ESP32


[env:rx-generic-c3-lr1121]
extends = env_common_rx_esp32c3
board = esp32-c3-devkitm-1
lib_deps =
  makuna/NeoPixelBus@^2.8.3
build_src_filter =
  ${env_common_rx_esp32c3.build_src_filter}
  +<modules/sx12xx-lib/src/lr11xx.cpp>
build_flags =
  ${env_common_rx_esp32c3.build_flags}
  -D RX_ELRS_GENERIC_C3_LR1121_ESP32C3


;-- generic 868/915 MHz ELRS boards with overlays or other variations

[env:rx-radiomaster-br3-900]            ; like generic 900 pa, but sx uses RFO, has its own name
extends = env_common_rx_esp82xx
board = esp8285
build_src_filter =
  ${env_common_rx_esp82xx.build_src_filter}
  +<modules/sx12xx-lib/src/sx127x.cpp>
build_flags =
  ${env_common_rx_esp82xx.build_flags}
  -D RX_ELRS_RADIOMASTER_BR3_900_ESP8285

;[env:rx-iflight-elrs-td-900]            ; identical to generic 900 td pa, to give it its own name
;extends = env:rx-generic-900-td-pa
;build_flags =
;  ${env_common_rx_esp32.build_flags}
;  -D RX_ELRS_IFLIGHT_ELRS_TD_900_ESP32


;-- ELRS 2.4 GHz Generic Devices

[env:rx-generic-2400]
extends = env_common_rx_esp82xx
board = esp8285
build_src_filter =
  ${env_common_rx_esp82xx.build_src_filter}
  +<modules/sx12xx-lib/src/sx128x.cpp>
build_flags =
  ${env_common_rx_esp82xx.build_flags}
  -D RX_ELRS_GENERIC_2400_ESP8285


[env:rx-generic-2400-pa]
extends = env_common_rx_esp82xx
board = esp8285
build_src_filter =
  ${env_common_rx_esp82xx.build_src_filter}
  +<modules/sx12xx-lib/src/sx128x.cpp>
build_flags =
  ${env_common_rx_esp82xx.build_flags}
  -D RX_ELRS_GENERIC_2400_PA_ESP8285


[env:rx-generic-2400-d-pa]              ; only antenna1 is used
extends = env_common_rx_esp82xx
board = esp8285
build_src_filter =
  ${env_common_rx_esp82xx.build_src_filter}
  +<modules/sx12xx-lib/src/sx128x.cpp>
build_flags =
  ${env_common_rx_esp82xx.build_flags}
  -D RX_ELRS_GENERIC_2400_D_PA_ESP8285


[env:rx-generic-2400-td-pa]
extends = env_common_rx_esp32
board = pico32
lib_deps =
  makuna/NeoPixelBus@^2.8.3
build_src_filter =
  ${env_common_rx_esp32.build_src_filter}
  +<modules/sx12xx-lib/src/sx128x.cpp>
build_flags =
  ${env_common_rx_esp32.build_flags}
  -D RX_ELRS_GENERIC_2400_TD_PA_ESP32


;-- generic 2.4 GHz ELRS boards with overlays or other variations

;[env:rx-iflight-elrs-2400]              ; like generic 2400 pa, but provides 500 mW instead of 100 mW, has its own name
;extends = env:rx-generic-2400-pa
;build_flags =
;  ${env_common_rx_esp82xx.build_flags}
;  -D RX_ELRS_IFLIGHT_ELRS_2400_ESP8285
;  -D POWER_OVERLAY


;[env:rx-iflight-elrs-td-2400]           ; like generic 2400 td pa, but provides 250 mW instead of 100 mW, has its own name
;extends = env:rx-generic-2400-td-pa
;build_flags =
;  ${env_common_rx_esp32.build_flags}
;  -D RX_ELRS_IFLIGHT_ELRS_TD_2400_ESP32
;  -D POWER_OVERLAY


;-- selected ELRS boards --

[env:rx-bayck-nano-pro-900]             ; identical to generic 900 pa, to give it its own name
extends = env:rx-generic-900-pa
build_flags =
  ${env_common_rx_esp82xx.build_flags}
  -D RX_ELRS_BAYCK_NANO_PRO_900_ESP8285


[env:rx-speedybee-nano-2400]            ; identical to generic 2400 pa, to give it its own name
extends = env:rx-generic-2400-pa
build_flags =
  ${env_common_rx_esp82xx.build_flags}
  -D RX_ELRS_SPEEDYBEE_NANO_2400_ESP8285


[env:rx-radiomaster-rp4td-2400]         ; like generic 2400 td pa, but with OUT added on 2nd serial, has its own name
extends = env:rx-generic-2400-td-pa
build_flags =
  ${env_common_rx_esp32.build_flags}
  -D RX_ELRS_RADIOMASTER_RP4TD_2400_ESP32


[env:rx-betafpv-superd-2400]            ; like generic 2400 td pa, but sx and sx2 use DCDC mode, has its own name
extends = env:rx-generic-2400-td-pa
build_flags =
  ${env_common_rx_esp32.build_flags}
  -D RX_ELRS_BETAFPV_SUPERD_2400_ESP32
  -D SX_USE_REGULATOR_MODE_DCDC
  -D SX2_USE_REGULATOR_MODE_DCDC


[env:rx-radiomaster-xr4-900]            ; like generic lr1121 true diversity, but with out
extends = env:rx-generic-lr1121-td
build_flags =
  ${env_common_rx_esp32.build_flags}
  -D RX_ELRS_RADIOMASTER_XR4_900_ESP32


[env:rx-radiomaster-xr1-900]            ; like generic c3 lr1121, but with out
extends = env:rx-generic-c3-lr1121
build_flags =
  ${env_common_rx_esp32c3.build_flags}
  -D RX_ELRS_RADIOMASTER_XR1_900_ESP32C3


;-- some ELRS Tx External Modules

[env:tx-radiomaster-rp4td-2400-sik-telem]
extends = env_common_tx_esp32
board = pico32
lib_deps =
  makuna/NeoPixelBus@^2.8.3
build_src_filter =
  ${env_common_tx_esp32.build_src_filter}
  +<modules/sx12xx-lib/src/sx128x.cpp>
build_flags =
  ${env_common_tx_esp32.build_flags}
  -D TX_ELRS_RADIOMASTER_RP4TD_2400_ESP32


[env:tx-betafpv-micro-1w-2400]
extends = env_common_tx_esp32
board = esp32dev
lib_deps =
    makuna/NeoPixelBus@^2.8.3
build_src_filter =
  ${env_common_tx_esp32.build_src_filter}
  +<modules/sx12xx-lib/src/sx128x.cpp>
  +<Common/thirdparty/gdisp.c>
build_flags =
  ${env_common_tx_esp32.build_flags}
  -D TX_ELRS_BETAFPV_MICRO_1W_2400_ESP32


[env:tx-radiomaster-bandit-micro-900]
extends = env_common_tx_esp32
board = esp32dev
build_src_filter =
  ${env_common_tx_esp32.build_src_filter}
  +<modules/sx12xx-lib/src/sx127x.cpp>
  +<Common/thirdparty/gdisp.c>
build_flags =
  ${env_common_tx_esp32.build_flags}
  -D TX_ELRS_RADIOMASTER_BANDIT_MICRO_900_ESP32


[env:tx-radiomaster-bandit-900]
extends = env_common_tx_esp32
board = esp32dev
lib_deps =
  makuna/NeoPixelBus@^2.8.3
build_src_filter =
  ${env_common_tx_esp32.build_src_filter}
  +<modules/sx12xx-lib/src/sx127x.cpp>
  +<Common/thirdparty/gdisp.c>
build_flags =
  ${env_common_tx_esp32.build_flags}
  -D TX_ELRS_RADIOMASTER_BANDIT_900_ESP32


[env:tx-radiomaster-ranger-2400]
extends = env_common_tx_esp32
board = esp32dev
lib_deps =
  makuna/NeoPixelBus@^2.8.3
build_src_filter =
  ${env_common_tx_esp32.build_src_filter}
  +<modules/sx12xx-lib/src/sx128x.cpp>
  +<Common/thirdparty/gdisp.c>
build_flags =
  ${env_common_tx_esp32.build_flags}
  -D TX_ELRS_RADIOMASTER_RANGER_2400_ESP32


;-- some ELRS Tx, Internal Modules

[env:tx-radiomaster-internal-2400]      ; good for TX16S, TX12, MT12, Zorro, Pocket
extends = env_common_tx_esp32
board = esp32dev
build_src_filter =
  ${env_common_tx_esp32.build_src_filter}
  +<modules/sx12xx-lib/src/sx128x.cpp>
build_flags =
  ${env_common_tx_esp32.build_flags}
  -D TX_ELRS_RADIOMASTER_INTERNAL_2400_ESP32


[env:tx-radiomaster-internal-boxer-2400]
extends = env_common_tx_esp32
board = esp32dev
build_src_filter =
  ${env_common_tx_esp32.build_src_filter}
  +<modules/sx12xx-lib/src/sx128x.cpp>
build_flags =
  ${env_common_tx_esp32.build_flags}
  -D TX_ELRS_RADIOMASTER_INTERNAL_BOXER_2400_ESP32


[env:tx-jumper-internal-2400]           ; good for T20 V1, T20 V2, T15, T14, T-Pro S
extends = env_common_tx_esp32
board = esp32dev
build_src_filter =
  ${env_common_tx_esp32.build_src_filter}
  +<modules/sx12xx-lib/src/sx128x.cpp>
build_flags =
  ${env_common_tx_esp32.build_flags}
  -D TX_ELRS_JUMPER_INTERNAL_2400_ESP32


[env:tx-jumper-internal-900]            ; good for T20 V2, T15, T14, T-Pro S (not T20 V1!)
extends = env_common_tx_esp32
board = esp32dev
build_src_filter =
  ${env_common_tx_esp32.build_src_filter}
  +<modules/sx12xx-lib/src/sx127x.cpp>
build_flags =
  ${env_common_tx_esp32.build_flags}
  -D TX_ELRS_JUMPER_INTERNAL_900_ESP32


;-- ESP DIY boards --

[env:rx-diy-dev-900-esp8266]
extends = env_common_rx_esp82xx
board = nodemcuv2
board_build.f_cpu = 80000000L
build_type = debug
monitor_filters = esp8266_exception_decoder, default
build_src_filter =
  ${env_common_rx_esp82xx.build_src_filter}
  +<modules/sx12xx-lib/src/sx127x.cpp>
build_flags =
  ${env_common_rx_esp82xx.build_flags}
  -D RX_DIY_DEV_900_ESP8266


[env:rx-diy-dev-900-esp32]
extends = env_common_rx_esp32
board = heltec_wireless_stick_lite
monitor_filters = esp32_exception_decoder, default, time
build_src_filter =
  ${env_common_rx_esp32.build_src_filter}
  +<modules/sx12xx-lib/src/sx127x.cpp>
build_flags =
  ${env_common_esp32.build_flags}
  -D RX_DIY_DEV_900_ESP32

